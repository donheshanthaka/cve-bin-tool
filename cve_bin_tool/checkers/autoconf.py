# Copyright (C) 2022 Intel Corporation
# SPDX-License-Identifier: GPL-3.0-or-later


"""
CVE checker for autoconf:

reference:
https://www.gnu.org/software/autoconf/
"""
from __future__ import annotations

from cve_bin_tool.checkers import Checker


class AutoconfChecker(Checker):
    CONTAINS_PATTERNS: list[str] = [
        r"# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:",
        r"# FIXME: should be removed in autoconf 3.0.",
        r"# So that the autoconf-generated scripts will always re-execute",
        r"# These variables are no longer used directly by Autoconf, but are AC_SUBSTed",
        r"# These variables are no longer used directly by Autoconf, but are AC_SUBSTed",
        r"# These variables are no longer used directly by Autoconf, but are AC_SUBSTed",
        r"# and are intended to be withdrawn in a future Autoconf release.",
        r"# autoconf, causing NAME to expand to NEW-CODE, plus",
        r"# from autoconf, because that's instructions for what",
        r"# original and so on.  Autoconf is especially sensitive to this).",
        r"# original and so on.  Autoconf is especially sensitive to this).",
        r"# original and so on.  Autoconf is especially sensitive to this).",
        r"Contact autoconf@gnu.org if you really need it.])ac_@&t@config_guess",
        r"Contact autoconf@gnu.org if you really need it.])ac_@&t@config_sub",
        r"Contact autoconf@gnu.org if you really need it.])ac_@&t@config_sub",
        r"[# Autoconf-2.13 could set the ac_cv_exeext variable to `no'.",
        r"[m4_fatal([Autoconf version $1 or higher is required],",
        r"[m4_fatal([Autoconf version $1 or higher is required],",
        r"[m4_fatal([Autoconf version $1 or higher is required],",
        r"[m4_fatal([Autoconf version $1 or higher is required],",
        r"[m4_fatal([Autoconf version $1 or higher is required],",
        r"dnl For compatibility with autoconf 2.69 and prior, if $1 is not `noyywrap',",
        r"dnl This is for compatibility with Autoconf 2.61-2.69.",
        r"dnl for example in autoconf's own testsuite (and happens *a lot* there,",
        r"dnl for example in autoconf's own testsuite (and happens *a lot* there,",
        r"dnl for example in autoconf's own testsuite (and happens *a lot* there,",
        r"in a future version of Autoconf they will not be expanded]dnl",
        r"in a future version of Autoconf they will not be expanded]dnl",
        r"in a future version of Autoconf they will not be expanded]dnl",
        r"in a future version of Autoconf they will not be expanded]dnl",
        r"m4_PACKAGE_TARNAMEautoconf(?:(?:\r?\n.*?)*)m4_PACKAGE_VERSION2.71",
        r"m4_PACKAGE_TARNAMEautoconf(?:(?:\r?\n.*?)*)m4_PACKAGE_VERSION2.71",
        r"m4_PACKAGE_TARNAMEautoconf(?:(?:\r?\n.*?)*)m4_PACKAGE_VERSION2.71",
        r"m4_text_box([Autoconf initialization.])])",
        r"m4_version_prereqm4_if(m4_version_compare([2.71], [$1]),(?:(?:\r?\n.*?)*)[m4_fatal([Autoconf version $1 or higher is required],",
        r"m4_version_prereqm4_if(m4_version_compare([2.71], [$1]),(?:(?:\r?\n.*?)*)[m4_fatal([Autoconf version $1 or higher is required],",
        r"m4_version_prereqm4_if(m4_version_compare([2.71], [$1]),(?:(?:\r?\n.*?)*)[m4_fatal([Autoconf version $1 or higher is required],",
    ]
    FILENAME_PATTERNS: list[str] = [
        r"autoconf",
    ]
    VERSION_PATTERNS: list[str] = [r"autoconf-(\d+\.\d+)"]
    VENDOR_PRODUCT: list[str] = [("autoconf", "autoconf")]
